
#
# This is the PUBLIC virtual host for monitor.{{ tld }}
#
# Note that we call another NGINX virtual host, from the internal network,
# without SSL, and with a different name than the publicly exposed.
#
# Intention is that we can have multiple internal upstreams load-balanced
# by this very virtual host.
#
# ===========================================================================
#
# Managed by Salt Stack. Do NOT edit manually!
# source: {{ source }}
#
{% if upstreams|count() >= 1 %}
upstream upstream_cachet {
    keepalive 16;
    ip_hash;

{%- for b in upstreams %}
    server    {{ b }}:{{ upstream_port }};
{%- endfor %}
}

upstream upstream_mail {
  server {{ mail_ip }}:80;
}

upstream upstream_monitor {
  server {{ monitor_ip }}:80;
}

server {
    listen      80;
    server_name monitor.{{ tld }};
    include     common_params;
    return      301 https://monitor.{{ tld }}$request_uri;
}

server {
    listen      443 ssl spdy;
    server_name monitor.{{ tld }};

    root    /var/www/html;
    include common_params;
    include ssl_params;

    ssl                 on;
    ssl_certificate     /etc/ssl/webplatform/public_wildcard_201509.pem;
    ssl_certificate_key /etc/ssl/webplatform/201509-fastly.key;

    location ^~ /ganglia/ {
        expires                1m;
        proxy_pass             http://upstream_monitor/ganglia/;
        include                proxy_params;
        proxy_intercept_errors on;
    }

    location ^~ /cgi-bin/mailgraph.cgi {
        expires                1m;
        auth_basic             "Email stats";
        auth_basic_user_file   htpasswd;
        proxy_pass             http://upstream_mail/cgi-bin/mailgraph.cgi;
        include                proxy_params;
        proxy_intercept_errors on;
    }

    location ^~ /lurker {
        expires                1m;
        auth_basic             "Email viewer";
        auth_basic_user_file   htpasswd;
        proxy_pass             http://upstream_mail/lurker;
        include                proxy_params;
        proxy_intercept_errors on;
    }

    location / {
        proxy_pass             http://upstream_cachet;
        include                proxy_params;
        proxy_intercept_errors on;

        # Backend keepalive
        # ref: http://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive
        proxy_http_version 1.1;
        proxy_set_header   Connection "";
    }
}
{% else %}
# No upstreams found, let's not enable this service
{% endif %}
