
#
# This is the PUBLIC virtual host for specs.{{ tld }}
#
# Note that we call another NGINX virtual host, from the internal network,
# without SSL, and with a different name than the publicly exposed.
#
# Intention is that we can have multiple internal upstreams load-balanced
# by this very virtual host.
#
# ===========================================================================
#
# Managed by Salt Stack. Do NOT edit manually!
# source: {{ source }}
#
{% if upstreams|count() >= 1 %}
upstream upstream_publican {
{%- for b in upstreams_publican %}
    server    {{ b }}:{{ upstream_port_publican }};
{%- endfor %}
}

upstream upstream_specs {
    keepalive 16;

{%- for b in upstreams %}
    server    {{ b }}:{{ upstream_port }};
{%- endfor %}
}

server {
    listen      80;
    server_name specs.{{ tld }};
    include     common_params;
    return      301 https://specs.{{ tld }}$request_uri;
}

server {
    listen      443 ssl spdy;
    server_name specs.{{ tld }};

    root    /var/www/html;
    include common_params;
    include ssl_params;

    ssl                 on;
    ssl_certificate     /etc/ssl/webplatform/public_wildcard_201509.pem;
    ssl_certificate_key /etc/ssl/webplatform/201509-fastly.key;

    location    /hook {
        proxy_pass       http://upstream_publican;
        proxy_set_header Host $http_host;
    }

    location    / {
        proxy_pass             http://upstream_specs;
        include                proxy_params;
        proxy_intercept_errors on;

        proxy_redirect         http://specs.{{ tld }}:{{ upstream_port }} https://specs.{{ tld }};

        # Backend keepalive
        # ref: http://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive
        proxy_http_version 1.1;
        proxy_set_header   Connection "";

        expires 1h;
    }
}
{% else %}
# No upstreams found, let's not enable this service
{% endif %}
